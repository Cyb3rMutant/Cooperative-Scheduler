#include "context.hpp"
__attribute__((section(".text"))) static unsigned char get_context_code[] = {
    0x4c, 0x8b, 0x04, 0x24, 0x4c, 0x89, 0x07, 0x4c, 0x8d, 0x44, 0x24,
    0x08, 0x4c, 0x89, 0x47, 0x08, 0x48, 0x89, 0x5f, 0x10, 0x48, 0x89,
    0x6f, 0x18, 0x4c, 0x89, 0x67, 0x20, 0x4c, 0x89, 0x6f, 0x28, 0x4c,
    0x89, 0x77, 0x30, 0x4c, 0x89, 0x7f, 0x38, 0x31, 0xc0, 0xc3};

__attribute__((section(".text"))) static unsigned char set_context_code[] = {
    0x4c, 0x8b, 0x07, 0x48, 0x8b, 0x67, 0x08, 0x48, 0x8b, 0x5f, 0x10, 0x48,
    0x8b, 0x6f, 0x18, 0x4c, 0x8b, 0x67, 0x20, 0x4c, 0x8b, 0x6f, 0x28, 0x4c,
    0x8b, 0x77, 0x30, 0x4c, 0x8b, 0x7f, 0x38, 0x41, 0x50, 0x31, 0xc0, 0xc3};

__attribute__((section(".text"))) static unsigned char swap_context_code[] = {
    0x4c, 0x8b, 0x04, 0x24, 0x4c, 0x89, 0x07, 0x4c, 0x8d, 0x44, 0x24,
    0x08, 0x4c, 0x89, 0x47, 0x08, 0x48, 0x89, 0x5f, 0x10, 0x48, 0x89,
    0x6f, 0x18, 0x4c, 0x89, 0x67, 0x20, 0x4c, 0x89, 0x6f, 0x28, 0x4c,
    0x89, 0x77, 0x30, 0x4c, 0x89, 0x7f, 0x38, 0x4c, 0x8b, 0x06, 0x48,
    0x8b, 0x66, 0x08, 0x48, 0x8b, 0x5e, 0x10, 0x48, 0x8b, 0x6e, 0x18,
    0x4c, 0x8b, 0x66, 0x20, 0x4c, 0x8b, 0x6e, 0x28, 0x4c, 0x8b, 0x76,
    0x30, 0x4c, 0x8b, 0x7e, 0x38, 0x41, 0x50, 0x31, 0xc0, 0xc3};

void (*get_context)(Context *) = (void (*)(Context *))get_context_code;
void (*set_context)(Context *) = (void (*)(Context *))set_context_code;
void (*swap_context)(Context *,
                     Context *) = (void (*)(Context *,
                                            Context *))swap_context_code;
//
// #pragma once
//
// struct Context {
//     void *rip, *rsp;
//     void *rbx, *rbp, *r12, *r13, *r14, *r15;
//
//     Context(void (*function)() = nullptr, char *stack_top = nullptr);
//
//     void get_context();
//     void set_context();
//     void swap_context(Context *other);
// };

// Context::Context(void (*function)(), char *stack_top) {
//     rip = (void *)function;
//     rsp = stack_top;
// }
//
// void Context::get_context() {
//     std::cout << "getting (" << this << "(" << rsp << ", " << rip << ")"
//               << ")\n";
//     ::get_context(this);
// }
// void Context::set_context() {
//     std::cout << "setting (" << this << "(" << rsp << ", " << rip << ")"
//               << ")\n";
//     ::set_context(this);
//     std::cout << "HEREREEEEEEEEEEEEEEEE";
// }
// void Context::swap_context(Context *other) {
//     std::cout << "swapping (" << this << "(" << rsp << ", " << rip << ")"
//               << ") with (" << other << "(" << other->rsp << ", " <<
//               other->rip
//               << ")"
//               << ")\n";
//     ::swap_context(this, other);
// }
